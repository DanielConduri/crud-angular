#version: "3.9"

services:

  # angular-app:
  #   image: angular
  #   container_name: container-angular
  #   build: 
  #     context: ./client
  #     dockerfile: Dockerfile
  #   ports:
  #     - "4200:80" # Mapea el puerto 80 del contenedor al puerto 8080 del host
  #   #volumes:
  #     #- ./nginx.conf:/etc/nginx/conf.d/default.conf # Opcional para desarrollo
  #   # expose:
  #   #   - "4200"
  #   restart: always
  #   networks:
  #     - backend

  api:
    image: node18
    container_name: container-api-node
    build: ./server
    expose:
      - "8000"
    restart: always
    env_file: ./server/.env
    networks:
      - backend

  nginx:
    image: nginx:latest
    container_name: container-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d/
      - ./data/certificates:/etc/letsencrypt # Volumen para almacenar certificados
      - ./data/www:/var/www/certbot # Volumen para desafío HTTP de Let's Encrypt
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`app.pruebasinventario.me`)"
      - "traefik.http.routers.nginx.entrypoints=http,https"
      - "traefik.http.routers.nginx.tls=true"
      - "traefik.http.routers.nginx.tls.certresolver=myresolver"
    depends_on:
      - api
    restart: always
    networks:
      - backend

  # Contenedor de Certbot
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./data/certificates:/etc/letsencrypt # Volumen para almacenar certificados
      - ./data/www:/var/www/certbot # Volumen para desafío HTTP de Let's Encrypt
    entrypoint: >
      certbot certonly
      --webroot
      --webroot-path=/var/www/certbot
      --email tu-email@dominio.com
      --agree-tos
      --no-eff-email
      -d tu-dominio.com
      -d www.tu-dominio.com
    networks:
      - backend

networks:
  backend:
    #driver: bridge
